/*
  Developer: Roderick Bernardo
  Purpose: Basic Grid demo
*/

/* body is the selector */
body {
  /* 
    Declaration block composed of one or more 
    Property: Value;
  */
  font-family: Arial, Helvetica, sans-serif;
  padding: 0;
  margin: 0;
}

/* https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout/Basic_concepts_of_grid_layout */
/* CSS Grid Layout is a 2-dimensional layout system in CSS. */
/* It allows you to layout content in rows and columns. */
/* As opposed to Flexbox which 1-dimensional layout system in CSS (Either rows or columns only). */
/* Grid Concepts */
/* Grid Container - The element with display: grid */
/* Grid Items - Direct children of the grid container */
/* Grid Lines - Invisible lines that divide the grid into rows and columns */
/* Grid Tracks - Rows or columns */
/* Grid Cells - Individual boxes formed by rows and columns */
/* Grid Areas - A space covering multiple cells */
/* https://developer.mozilla.org/en-US/docs/Web/CSS/grid */

.layout {
  display: grid;
  /* https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas */
  grid-template-areas:
    "header header header header"
    "nav main main aside"
    "nav main main aside"
    "footer footer footer footer";
  grid-template-columns: 1fr 1fr 1fr 1fr;
}

header {
  grid-area: header;
  background: #ff0000;
}

nav {
  grid-area: nav;
  background: #ff6f00;
}

main {
  grid-area: main;
  background: #ffea00;
}

aside {
  grid-area: aside;
  background: #5eff00;
}

footer {
  grid-area: footer;
  background: #00ff95;
}

.layout > header,
.layout > nav,
.layout > main,
.layout > aside,
.layout > footer {
  padding: 20px;
  color: black;
  font-weight: 900;
}
